/*
========================================================================================
    Base Nextflow config file
========================================================================================
    Default configuration for all profiles
----------------------------------------------------------------------------------------
*/

process {
    
    // Global process defaults
    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }
    
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'
    
    // Resource requirements by process name
    withName:FASTQC {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 2.GB  * task.attempt, 'memory'  ) }
        time   = { check_max( 1.h   * task.attempt, 'time'    ) }
        container = 'quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0'
    }
    
    withName:MULTIQC {
        cpus   = { check_max( 1     * task.attempt, 'cpus'     ) }
        memory = { check_max( 4.GB  * task.attempt, 'memory'   ) }
        time   = { check_max( 2.h   * task.attempt, 'time'     ) }
        container = 'quay.io/biocontainers/multiqc:1.15--pyhdfd78af_0'
    }
    
    withName:TRIMMOMATIC {
        cpus   = { check_max( 4     * task.attempt, 'cpus'     ) }
        memory = { check_max( 8.GB  * task.attempt, 'memory'   ) }
        time   = { check_max( 4.h   * task.attempt, 'time'     ) }
        container = 'quay.io/biocontainers/trimmomatic:0.39--hdfd78af_2'
    }
    
    withName:'STAR_.*' {
        cpus   = { check_max( 8     * task.attempt, 'cpus'     ) }
        memory = { check_max( 32.GB * task.attempt, 'memory'   ) }
        time   = { check_max( 8.h   * task.attempt, 'time'     ) }
        container = 'quay.io/biocontainers/star:2.7.10b--h9ee0642_0'
    }
    
    withName:SALMON_QUANT {
        cpus   = { check_max( 4     * task.attempt, 'cpus'     ) }
        memory = { check_max( 16.GB * task.attempt, 'memory'   ) }
        time   = { check_max( 4.h   * task.attempt, 'time'     ) }
        container = 'quay.io/biocontainers/salmon:1.10.1--h7e5ed60_0'
    }
    
    withName:'SAMTOOLS_.*' {
        cpus   = { check_max( 2     * task.attempt, 'cpus'     ) }
        memory = { check_max( 4.GB  * task.attempt, 'memory'   ) }
        time   = { check_max( 2.h   * task.attempt, 'time'     ) }
        container = 'quay.io/biocontainers/samtools:1.17--h00cdaf9_0'
    }
    
    withName:'GATK4_.*' {
        cpus   = { check_max( 2     * task.attempt, 'cpus'     ) }
        memory = { check_max( 16.GB * task.attempt, 'memory'   ) }
        time   = { check_max( 8.h   * task.attempt, 'time'     ) }
        container = 'broadinstitute/gatk:4.4.0.0'
    }
    
    withLabel:process_single {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
    }
    
    withLabel:process_low {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
    }
    
    withLabel:process_medium {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
    }
    
    withLabel:process_high {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
    }
    
    withLabel:process_long {
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
    }
    
    withLabel:process_high_memory {
        memory = { check_max( 200.GB * task.attempt, 'memory' ) }
    }
    
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}

// Container registry settings
singularity {
    cacheDir = "${launchDir}/.singularity"
    libraryDir = "${launchDir}/.singularity"
}

docker {
    registry = 'quay.io'
}

podman {
    registry = 'quay.io'
}

